version: '3.8'

services:
  database:
    container_name: database
    image: postgres:latest
    environment:
      POSTGRES_DB: ${APP_DATABASE_NAME}
      POSTGRES_USER: ${APP_DATABASE_USER}
      POSTGRES_PASSWORD: ${APP_DATABASE_SECRET}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "${APP_DATABASE_PORT}:5432"

  php:
    container_name: php
    build:
      context: .
    ports:
      - "9001:9000"
    restart: on-failure
    volumes:
      - .:/var/www/web
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    working_dir: /var/www/web
    depends_on:
      - php-queue

  php-queue:
    container_name: php-queue
    build:
      context: .
    volumes:
      - .:/var/www/web
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    command: php bin/console messenger:consume async
    restart: always
    depends_on:
      - database
      - redis
      - php-composer-installer

  php-composer-installer:
    container_name: php-composer-installer
    build:
      context: .
    volumes:
      - .:/var/www/web
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    command: composer install

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    ports:
      - "8040:80"
    volumes:
      - .:/var/www/web
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  nginx-front:
    container_name: nginx-front
    image: nginx:stable-alpine
    ports:
      - "8041:80"
    volumes:
      - .:/var/www/web
      - ./docker/nginx/front.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - .:/var/lib/redis/data